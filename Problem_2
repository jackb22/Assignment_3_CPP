/*
 * Title: Problem_2.cpp
 * Date: February  10th, 2023
 * Author: Jack Bennett
 * Version: 1.0
 */

/* Documentation
 *
 * Program Purpose: opens a text file and displays its contents line by line.
 *
 * Classes: None
 *
 * Notes:  void displayFileContents(const std::string& filename) was made const because it does not modify the filename variable
 *         By making the parameter a reference to a const string, the function avoids making a copy of the filename string, 
 *         which can help to improve performance and reduce memory usage.
 * Variables:
 *    filename - string - The path  of the file to be read, used in both main and displayFileContents
 *    infile - ifstream - The input file stream object to read the file
 *    line - string - The string variable to hold each line of the file
 *
 */

/*
 * Test Plan:
 *
 * Normal Case(valid file path, program runs successfully):
 *  Enter the name of the input file: /users/jackbennett/desktop/excerpt.txt
 *  There was nothing so VERY remarkable in that; nor did Alice
 *  think it so VERY much out of the way to hear the Rabbit say to
 *  itself, `Oh dear!  Oh dear!  I shall be late!'  (when she thought
 *  it over afterwards, it occurred to her that she ought to have
 *  wondered at this, but at the time it all seemed quite natural);
 *  but when the Rabbit actually TOOK A WATCH OUT OF ITS WAISTCOAT-
 *  POCKET, and looked at it, and then hurried on, Alice started to
 *  her feet, for it flashed across her mind that she had never
 *  before seen a rabbit with either a waistcoat-pocket, or a watch to
 *  take out of it, and burning with curiosity, she ran across the
 *  field after it, and fortunately was just in time to see it pop
 *  down a large rabbit-hole under the hedge.
 *  In another moment down went Alice after it, never once
 *  considering how in the world she was to get out again.
 *  The rabbit-hole went straight on like a tunnel for some way,
 *  and then dipped suddenly down, so suddenly that Alice had not a
 *  moment to think about stopping herself before she found herself
 *  falling down a very deep well.
 *  Either the well was very deep, or she fell very slowly, for she
 *  had plenty of time as she went down to look about her and to
 *  wonder what was going to happen next. First, she tried to look
 *  down and make out what she was coming to, but it was too dark to
 *  see anything; then she looked at the sides of the well, and
 *  noticed that they were filled with cupboards and bookshelves;
 *  here and there she saw maps and pictures hung upon pegs. She
 *  took down a jar from one of the shelves as she passed; it was
 *  labelled `ORANGE MARMALADE', but to her great disappointment it
 *  was empty: she did not like to drop the jar for fear of killing
 *  somebody, so managed to put it into one of the cupboards as she
 *  fell past it.
 *
 *    This excerpt is adapted from Aliceâ€™s Adventures in Wonderland by Lewis Carroll, available from Project Gutenberg. http://www.gutenberg.org/files/11/11-h/11-h.html
 *
 * Bad Case(invalid file path):
 *  Enter the name of the input file: /users/jackbennett/desktop/invalid.txt
 *  Failed to open file /users/jackbennett/desktop/invalid.txt
 *
 *  Process finished with exit code 0
 *
 */




#include <iostream>
#include <fstream>
#include <string>

// Function to display the contents of a file line by line
void displayFileContents(const std::string& filename) {
    std::ifstream infile(filename); // Open the file
    // Check if the file was opened successfully
    if (!infile) {
        std::cerr << "Failed to open file " << filename << std::endl;
        return;
    }

    std::string line; // Variable to hold each line of the file
   // Loop through the file line by line
    while (getline(infile, line)) {
        std::cout << line;
        std::cin.get();
    }

    infile.close(); // Close the file
}



int main() {
    std::string filename;
    std::cout << "Enter the name of the input file: ";
    getline(std::cin, filename); // Get the file  from the user
    // Display the contents of the file
    displayFileContents(filename);

    return 0;

}
